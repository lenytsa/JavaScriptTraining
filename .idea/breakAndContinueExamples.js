//EXAMPLE OF continue
let arr = [1, 3,5, -1, 4,];       // задан массив чисел
let sum = 0;                         // переменной sum присваивается начальное значение
for (let i = 0; i < arr.length; i++) {   // цикл, проходящий по массиву
    if (arr[i] === -1) {                // если элемент массива равен -1
        continue;			     // цикл прерывается и происходит переход к команде следующей после цикла
    }
    sum += arr[i];                      // прибавить элемент к сумме
}
console.log(sum);
console.log('--------------------------------------')

//EXAMPLE OF CONTINUE, sum of even numbers using continue
//Найти сумму четных чисел от 0 до 10 (2 + 4 + 6 + 8 + 10).
let x = 0;               // начальное значение числа
let sum1 = 0;             // начальное значение суммы
while (x <= 10) {        // проверка условия окончания цикла
    x++;                   // увеличение числа на 1
    if (x % 2 === 0) {      // если число четное
        sum1 += x;            // прибавить число к сумме
    } else {                // иначе
        continue;            // пропустить итерацию цикла
    }
}
console.log(sum);        // вывод результата в консоль после окончания цикла
console.log('--------------------------------------')

//Найти сумму нечетных чисел от 0 до 10 (1 + 3 + 5 + 7 + 9)
let sumarry = 0;                    // начальное значение суммы
for (let x = 0; x <= 10; x++) { // цикл перебирает все числа от 0 до 10 с шагом 1
    if (x % 2 !== 0) {             // если число нечетное
        sumarry += x;                   // прибавление числа к сумме
    } else {
        continue;                   // в противном случае – пропуск итерации цикла
    }
}
console.log(sum);               // вывод суммы в консоль
console.log('--------------------------------------')

//В приведенных примерах можно было обойтись без директивы continue,
// используя неполную форму оператора if (без части else), например:
let sumM = 0;                    // начальное значение суммы
for (let x = 0; x <= 10; x++) { // цикл перебирает все числа от 0 до 10 с шагом 1
    if (x % 2 !== 0) {             // если число нечетное
        sumM += x;                   // прибавление числа к сумме
    }
}
console.log(sumM);               // вывод суммы в консоль
console.log('--------------------------------------')

for (let x = 1; x <= 100; x++) { // цикл перебирает все числа от 1 до 100 с шагом 1
    if (x === 50) {                // если число равно 50
        continue;                    // пропустить итерацию цикла
    }
    console.log(x);                  // вывод числа в консоль
}
console.log('--------------------------------------')

//Пример 4. Вывести в консоль все числа от 1 до 100, кроме числа 50.
for (let x = 1; x <= 100; x++) { // цикл перебирает все числа от 1 до 100 с шагом 1
    if (x === 50) {                // если число равно 50
        continue;                    // пропустить итерацию цикла
    }
    console.log(x);                  // вывод числа в консоль
}
console.log('--------------------------------------')

//Определите, есть ли в массиве отрицательный элемент.
// question
// Напишите функцию с именем isNegativeInArray, которая принимает массив arr в качестве аргумента и возвращает true, если в массиве есть хотя бы один отрицательный элемент, и false в противном случае. В решении необходимо использовать оператор break.
//
// Указание. Присвойте некоторой переменной значение false. Пройдите по массиву в цикле,
// и если встретится отрицательный элемент, присвойте этой переменной значение true и выполните прерывание цикла.
//
// Примеры:
//
// функция isNegativeInArray([1, 2, 3, 9, 0]) должна возвратить false;
// функция isNegativeInArray([2, 1, -3, 4, 3]) должна возвратить true;
// функция isNegativeInArray([2, 1, -3, -4, 3]) должна возвратить true.
function isNegativeInArray(arr){
    for(let i=0; i< arr.length; i++)
{
    if(arr[i]<0){
        return true
        break;
    }
}
return false;
}
console.log(isNegativeInArray([1, 2, 3, 9, 0]));
console.log(isNegativeInArray([1, 2, -3, 9, 0]));
console.log('--------------------------------------')

//Найдите в массиве первый четный элемент и его индекс.
// Напишите функцию с именем firstEvenElement, которая принимает массив arr в качестве аргумента и
// возвращает первый четный элемент и его индекс в виде массива [element, index]. Если в массиве нет ни
// одного четного элемента,
// вернуть пустой массив []. В решении необходимо использовать оператор break.
//     функция firstEvenElement([1, 2, 3, 4, 9, 0]) должна возвратить [2, 1];
// функция firstEvenElement([2, 1, -3, 4, 3]) должна возвратить [2, 0];
// функция firstEvenElement([9, 1, -3, -4, 12, 6]) должна возвратить [-4, 3];
// функция firstEvenElement([9, 1, -3, 3, 11]) должна возвратить [].
function firstEvenElement(arr){
    for(let i=0; i<arr.length; i++){
        if(arr[i]%2 ===0){
            return [arr[i],i];
            break;
        }
    }
    return []
}
console.log(firstEvenElement([1, 2, 3, 4, 9, 0]));
console.log(firstEvenElement([2, 1, -3, 4, 3]));
console.log(firstEvenElement([9, 1, -3, 3, 11]));
console.log(firstEvenElement([9, 1, -3, -4, 12, 6]));